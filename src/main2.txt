#include <iostream> 

#include <WiFi.h>
#include <WebServer.h>
#include <stack>
#include <queue>
#include <EEPROM.h>
//#include "FirebaseESP32.h"

#include "ESPAsyncWebServer.h"


using namespace std;
std::stack<int> s;


string currentWebpage;

int windDir=1;
float Temperature[5]={0,1,2,3,4};
String SendHTML(uint8_t led1stat,uint8_t led2stat,int windDir){
  String ptr = "<!DOCTYPE html> <html>\n";
  ptr +="<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n";
  ptr +="<meta name='viewport' content='width=device-width, initial-scale=1.0'/>";
  ptr +="<meta charset='utf-8'>";
  ptr +="<title>LED Control</title>\n";
  //STYLING START
  ptr +="<style>html { font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;}\n";
  ptr +="body{margin-top: 50px;} h1 {color: #444444;margin: 50px auto 30px;} h3 {color: #444444;margin-bottom: 50px;}\n";
  ptr +="table {border-collapse: collapse; border: 1px solid black; width: 100%;}";
  ptr +=".th_1 {background-color: #3498db; color: #ffff;border: 1px solid black;}";
  ptr +=".th_2 {1px solid black;}";
  ptr +=".button {display: block;width: 80px;background-color: #3498db;border: none;color: white;padding: 13px 30px;text-decoration: none;font-size: 25px;margin: 0px auto 35px;cursor: pointer;border-radius: 4px;}\n";
  ptr +=".button-on {background-color: #3498db;}\n";
  ptr +=".button-on:active {background-color: #2980b9;}\n";
  ptr +=".button-off {background-color: #34495e;}\n";
  ptr +=".button-off:active {background-color: #2c3e50;}\n";
  ptr +="p {font-size: 14px;color: #888;margin-bottom: 10px;}\n";
  ptr +="</style>\n";
  // SCRIPT START
  ptr +="<script>\n";
  ptr +="setInterval(loadDoc,200);\n";
  ptr +="function loadDoc() {\n";
  ptr +="var xhttp = new XMLHttpRequest();\n";
  ptr +="xhttp.onreadystatechange = function() {\n";
  ptr +="if (this.readyState == 4 && this.status == 200) {\n";
  ptr +="document.getElementById(\"webpage\").innerHTML =this.responseText}\n";
  ptr +="};\n";
  ptr +="xhttp.open(\"GET\", \"/\", true);\n";
  ptr +="xhttp.send();\n";
  ptr +="}\n";
  ptr +="</script>\n";

  ptr +="</head>\n";
  ptr +="<body>\n";
  ptr +="<div id=\"webpage\">\n";
  ptr +="<h1>ESP32 Web Server</h1>\n";
    
  ptr +="<h3>Using Station(STA) Mode</h3>\n";
  
  if(led1stat)
  {ptr +="<p>LED1 Status: ON</p><a class=\"button button-off\" href=\"/led1off\">OFF</a>\n";}
  else
  {ptr +="<p>LED1 Status: OFF</p><a class=\"button button-on\" href=\"/led1on\">ON</a>\n";}

  if(led2stat)
  {ptr +="<p>LED2 Status: ON</p><a class=\"button button-off\" href=\"/led2off\">OFF</a>\n";}
  else
  {ptr +="<p>LED2 Status: OFF</p><a class=\"button button-on\" href=\"/led2on\">ON</a>\n";}

  ptr += "<table class=\"th_1\"> <th class=\"th_2\">Water Temperature</th> <th class=\"th_1\">Air Temperature</th> <th class=\"th_1\">Air Humidity</th> <th class=\"th_1\">Water Level</th> </tr>";
 // ptr += "<tr> <td>"; ptr+=s1[0]; ptr+="</td>"; ptr += "<td>"; ptr+=s2[0]; ptr+="</td>"; ptr += "<td>"; ptr+=s3[0]]; ptr+="</td>";ptr += "<td>"; ptr+=s4[0]; ptr+="</td> </tr>";
  ptr += "<tr> <td>"; ptr+=windDir; ptr+="</td>"; ptr += "<td>"; ptr+=windDir; ptr+="</td>"; ptr += "<td>"; ptr+=windDir; ptr+="</td>";ptr += "<td>"; ptr+=windDir; ptr+="</td> </tr>";

  ptr +="</body>\n";
  ptr +="</html>\n";
  ptr +="<p>windDir: ";
  ptr +=windDir;
  return ptr;
}
/*Put your SSID & Password*/
const char* ssid = "MySpectrumWiFi8a-2G";  // Enter SSID here
const char* password = "swiftguppy564";  //Enter Password here


WebServer server(80);

uint8_t LED1pin = 4;
bool LED1status = LOW;

uint8_t LED2pin = 5;
bool LED2status = LOW;
void handle_OnConnect() {
  LED1status = LOW;
  LED2status = LOW;
  Serial.println("GPIO4 Status: OFF | GPIO5 Status: OFF");
  server.send(200, "text/html", SendHTML(LED1status,LED2status,windDir)); 

}

void handle_led1on() {
  LED1status = HIGH;
  Serial.println("GPIO4 Status: ON");
  server.send(200, "text/html", SendHTML(true,LED2status,windDir)); 
}

void handle_led1off() {
  LED1status = LOW;
  Serial.println("GPIO4 Status: OFF");
  server.send(200, "text/html", SendHTML(false,LED2status,windDir)); 
}

void handle_led2on() {
  LED2status = HIGH;
  Serial.println("GPIO5 Status: ON");
  server.send(200, "text/html", SendHTML(LED1status,true,windDir)); 
}

void handle_led2off() {
  LED2status = LOW;
  Serial.println("GPIO5 Status: OFF");
  server.send(200, "text/html", SendHTML(LED1status,false,windDir)); 
}

  



void handle_NotFound(){
  server.send(404, "text/plain", "Not found");
}



void setup() {


  Serial.begin(115200);
  delay(100);
  pinMode(LED1pin, OUTPUT);
  pinMode(LED2pin, OUTPUT);

  Serial.println("Connecting to ");
  Serial.println(ssid);

  //connect to your local wi-fi network
  WiFi.begin(ssid, password);

  //check wi-fi is connected to wi-fi network
  while (WiFi.status() != WL_CONNECTED) {
  delay(1000);
  Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected..!");
  Serial.print("Got IP: ");  
  Serial.println(WiFi.localIP());
  Serial.println("Hello World");

  server.on("/", handle_OnConnect);
  server.on("/led1on", handle_led1on);
  server.on("/led1off", handle_led1off);
  server.on("/led2on", handle_led2on);
  server.on("/led2off", handle_led2off);
  server.onNotFound(handle_NotFound);

  server.begin();
  Serial.println("HTTP server started");
}
void loop() {
  server.handleClient();
  if(LED1status)
  {digitalWrite(LED1pin, HIGH);}
  else
  {digitalWrite(LED1pin, LOW);}
  
  if(LED2status)
  {digitalWrite(LED2pin, HIGH);}
  else
  {digitalWrite(LED2pin, LOW);}
  //s.push(1);
    
  
}